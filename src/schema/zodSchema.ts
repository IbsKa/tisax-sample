import { z } from "zod"

export type inputType = "headline" | "singleLine" | "multiLine" | "shell" | "select" | "multiselect" | "checkbox" | "date" | "number" | "manualInsert" | "subheadline" | "date"
export interface InputSchema {
  key: string
  inputType: inputType
  label: string
  placeholder?: string
  description?: string
  required: boolean
  initialValue?: string
  selectValues?: Array<string>,
  step?: number,
}

export const schema = z.object({
  projectTitle: z.string().min(5).max(40),
  description: z.string().min(30),
  internal: z.boolean().optional(),
  clientData: z.boolean().optional(),
  paymentData: z.boolean().optional(),
  openInterfaces: z.boolean().optional(),
  tisaxRisk: z.string(),
  tisaxRiskReason: z.string().min(30),
  projectStart: z.date(),
  projectEnd: z.date(),
  projectRepo: z.string().url(),
  client: z.string().min(5),
  projectLead: z.string(),
  projectIsb: z.string(),
  clientContact: z.string(),
  tester: z.string().optional(),
  gitMaster: z.string(),
  supporter: z.string().optional(),
  documentators: z.string().optional(),
  hourBudget: z.number(),
  budgetContainsManagement: z.boolean().optional(),
  budgetContainsDev: z.boolean().optional(),
  budgetContainsDocumentation: z.boolean().optional(),
  budgetContainsTesting: z.boolean().optional(),
  budgetContainsMaintenance: z.boolean().optional(),
  budgetContainsSupport: z.boolean().optional(),
  prereqSoftware: z.string().optional(),
  prereqOs: z.string().optional(),
  prereqTest: z.string().optional(),
  installation: z.string(),
  shellInstall: z.string(),
  devSeparated: z.boolean().optional(),
  devEnv: z.string().optional(),
  shellDevEnv: z.string().optional(),
  testEnv: z.string().optional(),
  shellTestEnv: z.string().optional(),
  autodeploy: z.boolean().optional(),
  updateProcess: z.string().optional(),
  releaseProcess: z.string().min(10).optional(),
  manual: z.string().optional(),
  thirdPartyDocu: z.string().optional(),
  projectStatus: z.string().optional(),
  checklistDoable: z.boolean().optional(),
  checklistSpecs: z.boolean().optional(),
  checklistcostplan: z.boolean().optional(),
  checklistImprovements: z.boolean().optional(),
  checklistImprovementsDone: z.boolean().optional(),
  checklistDocumentation: z.boolean().optional(),
  checklistClientCosts: z.boolean().optional(),
  checklistRelease: z.boolean().optional(),
  checklistInstalled: z.boolean().optional(),
  checklistCourse: z.boolean().optional(),
  checklistSecrets: z.boolean().optional(),
  addition: z.string().optional(),
  versioning: z.string().optional(),
  author: z.string().optional(),
  remark: z.string().optional()
})



export const readmeSchema: Array<InputSchema> = [
  { key: "generalHeadline", inputType: "headline", label: "Allgemeine Informationen", required: false },
  { key: "projectTitle", inputType: "singleLine", label: "Projektname", required: true },
  { key: "projectStart", inputType: "date", label: "Projektstart", placeholder: "Wann hat die produktive Arbeit am Projekt begonnen?", required: true },
  { key: "projectEnd", inputType: "date", label: "Zieltermin", placeholder: "Bis wann soll der Grundauftrag abgeschlossen sein?", required: true },
  { key: "projectRepo", inputType: "singleLine", label: "Repository-URL", placeholder: "Link zum GitHub-Repository", required: true },
  { key: "client", inputType: "singleLine", label: "Auftraggeber", placeholder: "Auftraggebende Firma", required: true },
  { key: "description", inputType: "multiLine", label: "Projektbeschreibung", placeholder: "Welches Ziel wird mit diesem Projekt verfolgt?", required: true },
  { key: "tisaxHeadline", inputType: "headline", label: "TISAX", required: false },
  { key: "internal", inputType: "checkbox", label: "Internes Projekt", required: true },
  { key: "clientData", inputType: "checkbox", label: "Können Kundendaten betroffen sein?", required: true },
  { key: "paymentData", inputType: "checkbox", label: "Können Zahlungsdaten betroffen sein?", required: true },
  { key: "openInterfaces", inputType: "checkbox", label: "Gibt es offene Schnittstellen?", required: true },
  { key: "tisaxRisk", inputType: "select", label: "Einstufung Risikobeurteilung", initialValue: "Sehr hoch", selectValues: ["Sehr hoch", "Hoch", "Normal"], required: true },
  { key: "tisaxRiskReason", inputType: "multiLine", label: "Begründung TISAX-Einstufung", required: true },
  { key: "personsHeadline", inputType: "headline", label: "Beteiligte Personen", required: false },
  { key: "projectLead", inputType: "singleLine", label: "Projektverantwortlicher", placeholder: "Verantwortlicher für das Gesamptprojekt", required: true },
  { key: "projectIsb", inputType: "singleLine", label: "ISB", placeholder: "Verantwortlicher für die Informationssicherheit", required: true },
  { key: "clientContact", inputType: "singleLine", label: "Ansprechpartner Auftraggeber", required: true },
  { key: "gitMaster", inputType: "singleLine", label: "Verantwortlicher Masterbranch", placeholder: "Wer darf in den Master-Branch mergen?", required: true },
  { key: "tester", inputType: "singleLine", label: "Verantwortliche Testing", placeholder: "Gibt es Personen, die für den Test vorgesehen sind?", required: false },
  { key: "supporter", inputType: "singleLine", label: "Support", placeholder: "Wer ist für den Support vorgesehen?", required: false },
  { key: "documentators", inputType: "singleLine", label: "Dokumentation", required: false },
  { key: "budgetHeadline", inputType: "headline", label: "Budget", required: false },
  { key: "hourBudget", inputType: "number", label: "Stundenbudget", required: false, step: 8 },
  { key: "budget", inputType: "manualInsert", label: "Im Budget sind berücksichtigt:", required: false },
  { key: "budgetContainsManagement", inputType: "checkbox", label: "Projektmanagement", required: true },
  { key: "budgetContainsDev", inputType: "checkbox", label: "Softwareentwicklung", required: true },
  { key: "budgetContainsDocumentation", inputType: "checkbox", label: "Dokumentation", required: true },
  { key: "budgetContainsTesting", inputType: "checkbox", label: "Testing", required: true },
  { key: "budgetContainsMaintenance", inputType: "checkbox", label: "Software-Wartung", required: true },
  { key: "budgetContainsSupport", inputType: "checkbox", label: "Support", required: true },
  { key: "manualHeadline", inputType: "headline", label: "Technische Hinweise", placeholder: "Hier bitte genaue Installations- und Wiederherstellungsanleitungen angeben. Sie müssen grundsätzlich so gestaltet sein, dass auch neue User die Software testen oder installieren können.", required: false },
  { key: "prereqSub", inputType: "subheadline", label: "Voraussetzungen", placeholder: "Generelle Anforderungen hinsichtlich Hardware/installierte Runtimes/etc.", required: false },
  { key: "prereqSoftware", inputType: "multiLine", label: "Voraussetzungen für den Betrieb der Software", required: true },
  { key: "prereqOs", inputType: "multiLine", label: "Voraussetzungen Betriebssystem", required: false },
  { key: "prereqTest", inputType: "multiLine", label: "Voraussetzungen Test", required: false },
  { key: "installSub", inputType: "subheadline", label: "Installationsanleitung Programm", placeholder: "Welche Schritte sind notwendig, damit ein einzelner Nutzer das Programm installieren und/oder starten kann?", required: false },
  { key: "installation", inputType: "multiLine", label: "Hinweise Installationsanleitung", required: false },
  { key: "shellInstall", inputType: "shell", label: "Shell-Code für Installation", required: false },
  { key: "devSub", inputType: "subheadline", label: "Installationsanleitung Entwicklungsumgebung", placeholder: "Welche Schritte sind notwendig, damit ein Entwickler das Programm in der Entwicklungsumgebung lauffähig bekommt? Welche Schritte sind notwendig, um Debugging zu ermöglichen?", required: false },
  { key: "devSeparated", inputType: "checkbox", label: "Projekt enthält getrennte Umgebungen für Dev und Prod", required: true },
  { key: "devEnv", inputType: "multiLine", label: "Hinweise Installationsanleitung Entwicklungsumgebung", required: false },
  { key: "shellDevEnv", inputType: "shell", label: "Shell-Code für Installation Entwicklungsumgebung", required: false },
  { key: "testSub", inputType: "subheadline", label: "Installationsanleitung Testumgebung", placeholder: "Welche Schritte sind notwendig, damit ein Tester das Programm testen kann? Woher werden die Daten bezogen? Wie werden diese anonymisiert?", required: false },
  { key: "testEnv", inputType: "multiLine", label: "Hinweise Installationsanleitung Testumgebung", required: false },
  { key: "shellTestEnv", inputType: "shell", label: "Shell-Code für Installation Testumgebung", required: false },
  { key: "howToGetData", inputType: "multiLine", label: "Datenbeschaffung", required: false },
  { key: "releaseSub", inputType: "subheadline", label: "Deployment & Releases", placeholder: "Wie können neue Versionen erstellt werden?", required: false },
  { key: "autodeploy", inputType: "checkbox", label: "Bei Ausführen dieser Schritte wird ein automatisches Deployment getriggert", required: true },
  { key: "updateProcess", inputType: "multiLine", label: "Updateprozess", placeholder: "Bitte hier möglichst genau den Updateprozess definieren", required: true },
  { key: "releaseProcess", inputType: "multiLine", label: "Freigabeprozess", placeholder: "Wer gibt Releases frei und worauf sind die Entscheidungen begründet?", required: true },
  { key: "manualSub", inputType: "subheadline", label: "Bedienungsanleitung & Support", placeholder: "Welche Schritte sind notwendig, damit ein Tester das Programm testen kann? Woher werden die Daten bezogen? Wie werden diese anonymisiert?", required: false },
  { key: "manual", inputType: "multiLine", label: "Bedienung/Anleitung", required: false },
  { key: "thirdPartyDocu", inputType: "multiLine", label: "Dokumentation Nutzung Fremdsoftware", required: false },
  { key: "checklistHeadline", inputType: "headline", label: "Checkliste", placeholder: "Auch zum Abschluss eines Projektes müssen hier nicht alle Checkboxen markiert sein - wenn es dafür keinen Auftrag gibt, oder es in diesem Projekt nicht zweckvoll ist, können die entsprechenden Felder auch frei bleiben.", required: false },
  {
    key: "projectStatus", inputType: "select", label: "Projektstatus", initialValue: "Neu", selectValues: ["Neu", "Konzept", "In Arbeit", "Testphase", "Grundauftrag abeschlossen",
      "Bugfixing", "Feature-Request", "Abgeschlossen", "Abgelehnt"], required: true
  },
  { key: "checklistDoable", inputType: "checkbox", label: "Machbarkeit geprüft", required: true },
  { key: "checklistSpecs", inputType: "checkbox", label: "Lastenheft erstellt", required: true },
  { key: "checklistcostplan", inputType: "checkbox", label: "Kostenplan erstellt", required: true },
  { key: "checklistClientCosts", inputType: "checkbox", label: "Kundenseitige Kosten wurden kalkuliert und weitergegeben", required: true },
  { key: "checklistImprovements", inputType: "checkbox", label: "Verbesserungsvorschläge eingeholt", required: true },
  { key: "checklistImprovementsDone", inputType: "checkbox", label: "Verbesserungsvorschläge eingearbeitet", required: true },
  { key: "checklistDocumentation", inputType: "checkbox", label: "Dokumentation erstellt", required: true },
  { key: "checklistRelease", inputType: "checkbox", label: "Lauffähige Version erstellt, die alle gewünschten Features enthält", required: true },
  { key: "checklistInstalled", inputType: "checkbox", label: "Auf Zielsystemen installiert", required: true },
  { key: "checklistCourse", inputType: "checkbox", label: "Bedienungsanleitung erstellt", required: true },
  { key: "checklistSecrets", inputType: "checkbox", label: "Alle Secrets separiert von Projektstruktur", required: true },
  {
    key: "additionHeadline", inputType: "headline", label: "Sonstige Inhalte", "placeholder": "Sollten noch weitere Hinweise benötigt werden, " +
      "kannst du hier reines Markdown kopieren. Es wird dann ans Ende der Readme angehängt.", required: false
  },
  { key: "addition", inputType: "multiLine", label: "Sonstige Inhalte", placeholder: "Markdown", required: false },
  { key: "metaHeadline", inputType: "headline", label: "Meta-Informationen", placeholder: "Diese Informationen werden zum Generieren des Changelogs benötigt", required: false },
  { key: "versioning", inputType: "select", label: "Versionierung Changelog", initialValue: "Minor", selectValues: ["Major", "Minor", "Patch"], required: true },
  { key: "author", inputType: "singleLine", label: "Autor dieser Änderung", placeholder: "Initialen ausreichend", required: true },
  { key: "remark", inputType: "multiLine", label: "Bemerkung für Changelog", placeholder: "Bspw. 'Ersterstellung' oder 'Änderung Zieltermin'", required: true },
]